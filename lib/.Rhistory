table(master$biomarker_tidy$screening)
pwd()
cd('data-raw')
source('import.R')
table(master$biomarker_tidy$screening)
table(dipep$injury)
table(dipep$injury, useNA = 'ifany')
filter(dipep, is.na(injury)) 
filter(dipep, is.na(injury)) %>% dplyr::select(screening, injury)
table(dipep$injury, useNA = 'ifany')
table(dipep$thrombosis, useNA = 'ifany')
filter(dipep, is.na(thrombosis)) %>% dplyr::select(screening, injury)
filter(dipep, is.na(age)) %>% dplyr::select(screening, age, yearofbirth)
filter(dipep, is.na(age)) %>% dplyr::select(screening, age, year.of.birth)
filter(dipep, !is.na(age)) %>% dplyr::select(screening, age, year.of.birth)
filter(master$womans.details, screening %in% c('PE_017', 'PE_022'))
filter(dipep, !is.na(age)) %>% dplyr::select(screening, age, year.of.birth, event.date)
filter(dipep, is.na(age)) %>% dplyr::select(screening, age, year.of.birth, event.date)
dplyr::filter(master$investigations, group == 'Diagnosed PE' & is.na(pe.date))
a
pwd()
source('import.R')
cd('../')
build()
install()
cd('../knitr')
render('dipep.Rmd')
q()
missing.previous
missing.this.pregnancy
head(summary)
table(summary$first.st)
levels(dipep$first.st)
tail(dipep$first.st)
)
)
group_by(summary, group, history, this.pregnancy, physiology, previous.pregnancy) %>% summarise(n = n())
head(by.group)
pwd()
render('dipep.Rmd')
render('dipep.Rmd')
table(dipep$heart.rate.cat)
table(dipep$respiratory.rate.cat)
table(dipep$heart.rate.cat, useNA = 'ifany')
cd('../lib/data-raw/')
source('import.R')
table(dipep$heart.rate.cat, useNA = 'ifany')
table(dipep$bmi.cat, useNA = 'ifany')
pwd()
cd('../')
build()
install()
cd('../knitr')
names(dipep)
table(dipep$diagnosis.post)
table(dipep$diagnosis.post.pe)
grepl('suspected pe' dipep$diagnosis.post) %>% table()
grepl('suspected pe', dipep$diagnosis.post, ignore.case = TRUE) %>% table()
grepl('suspected pulmonary', dipep$diagnosis.post, ignore.case = TRUE) %>% table()
grepl('suspected pulmonary*or', dipep$diagnosis.post, ignore.case = TRUE) %>% table()
grepl('suspected pulmonary\\*or', dipep$diagnosis.post, ignore.case = TRUE) %>% table()
grepl('suspected pulmonary or', dipep$diagnosis.post, ignore.case = TRUE) %>% table()
grepl('suspected pulmonary embolism or', dipep$diagnosis.post, ignore.case = TRUE) %>% table()
grepl('^query pe$', dipep$diagnosis.post, ignore.case = TRUE) %>% table()
grepl('suspected p\\.e\\.', dipep$diagnosis.post, ignore.case = TRUE) %>% table()
grepl('suspected p.e.', dipep$diagnosis.post, ignore.case = TRUE) %>% table()
grepl('^suspected p.e.$', dipep$diagnosis.post, ignore.case = TRUE) %>% table()
dplyr::filter(dipep, grepl('suspected p.e.', diagnosis.post, ignore.case = TRUE)) %>% dplyr::select(diagnosis.post)
dplyr::filter(dipep, grepl('^suspected p.e$', diagnosis.post, ignore.case = TRUE)) %>% dplyr::select(diagnosis.post)
dplyr::filter(dipep, grepl('^suspected pulmonary$', diagnosis.post, ignore.case = TRUE)) %>% dplyr::select(diagnosis.post)
dplyr::filter(dipep, grepl('^suspected pulmonary', diagnosis.post, ignore.case = TRUE)) %>% dplyr::select(diagnosis.post)
dplyr::filter(dipep, grepl('^suspected pulmonary embol', diagnosis.post, ignore.case = TRUE)) %>% dplyr::select(diagnosis.post)
dplyr::filter(dipep, grepl('^suspected pe', diagnosis.post, ignore.case = TRUE)) %>% dplyr::select(diagnosis.post)
dplyr::filter(dipep, grepl('^suspected p.e', diagnosis.post, ignore.case = TRUE)) %>% dplyr::select(diagnosis.post)
dplyr::filter(dipep, grepl('suspected p.e', diagnosis.post, ignore.case = TRUE)) %>% dplyr::select(diagnosis.post)
table(summary.stats$group$Measurement)
pwd()
cd('../lib/data-raw')
source('import.R')
source('import.R')
table(dipep$diagnosis.test.pe)
table(dipep$diagnosis.test.pe, useNA = 'ifany')
table(dipep$diagnosis.post.pe, useNA = 'ifany')
source('import.R')
cd('../')
build()
install()
cd('../knitr/')
render('dipep.Rmd')
q()
render('dipep.Rmd')
table(dipep$surgery, useNA = 'ifany')
table(dipep$prev.preg.problem, useNA = 'ifany')
table(dipep$smoking, useNA = 'ifany')
table(dipep$trimester, useNA = 'ifany')
pwd()
cd('../lib/data-raw/')
source('import.R')
cd('../')
build()
install()
cd('../knitr')
render('dipep.Rmd')
table(dipep$smoking)
table(t1$smoking)
cd('../lib/data-raw')
source('import.R')
table(dipep$smoking)
table(dipep$prev.preg.problem)
table(t2$prev.preg.problem)
source('import.R')
table(dipep$prev.preg.problem)
source('import.R')
table(dipep$prev.preg.problem)
table(dipep$surgery)
table(t7$surgery)
source('import.R')
source('import.R')
table(dipep$surgery)
table(dipep$trimester)
cd('../')
build()
install()
cd('../knitr')
render('dipep.Rmd')
q()
biomarker.all$aprothombin
biomarker.all$aprothombin %>% names()
biomarker.all$aprothombin$fitted
biomarker.all$aprothombin$fitted %>% summary
pwd()
cd('../lib/data-raw/')
source('import.R')
source('import.R')
table(dipep$group, dipep$vte, useNA = 'ifany')
source('import.R')
table(dipep$group, dipep$vte, useNA = 'ifany')
source('import.R')
table(dipep$group, dipep$vte, useNA = 'ifany')
259 + 36
table(dipep$first.st, dipep$vte, useNA = 'ifany')
pwd()
cd('../')
build()
traceback()
dipep_glm
pwd()
build()
install()
dipep_glm
traceback()
pwd()
cd('data-raw')
source('import.R')
names(t)
t$fitted %>% summary()
names(biomarker.all$aptt)
name(dipep)
names(dipep)
table(dipep$exclude.anti.coag)
table(dipep$exclude.anti.coag, dipep$vte)
names(dipep)
names(dipep)
table(dipep$heart.rate, dipep$simplified.heart.rate)
pwd()
source('import.R')
cd('../')
build()
install()
cd('../knitr/')
render('dipep.Rmd')
traceback())
traceback()
biomarker.all$predicted
pwd()
cd('../lib/')
build()
install()
cd('../knitr/')
render('dipep.Rmd')
traceback()
cd('../lib/')
build()
install()
table(biomarker.excl.anti.coag$predicted$name)
table(biomarker.excl.anti.coag$predicted$name, biomarker.excl.anti.coag$predicted$m)
table(biomarker.excl.anti.coag$predicted$name, biomarker.excl.anti.coag$predicted$M)
table(biomarker.excl.anti.coag$predicted$name, biomarker.excl.anti.coag$predicted$D)
head(biomarker.excl.anti.coagroc.other$counts)
head(biomarker.excl.anti.coag$roc.other$counts)
table(biomarker.excl.anti.coag$roc.other$counts$term, biomarker.excl.anti.coag$roc.other$counts$classification)
table(biomarker.excl.anti.coag$roc.other$counts)
build()
install()
head(biomarker.excl.anti.coag$predicted)
table(biomarker.excl.anti.coag$predicted$name)
dplyr::filter(biomarker.excl.anti.coag$predicted, name %in% c('ddimer.elisa', 'ddimer.innovance'))
dplyr::filter(biomarker.excl.anti.coag$predicted, name %in% c('ddimer.elisa', 'ddimer.innovance')) %>% summarise()
dplyr::filter(biomarker.excl.anti.coag$predicted, name %in% c('ddimer.elisa', 'ddimer.innovance')) %>% summary()
build()
install()
cd('../knitr/')
render('dipep.Rmd')
render('dipep.Rmd')
render('dipep.Rmd')
biomarker.excl.anti.coag$roc.other$summary.stats %>% names()
names(biomarker.all)
render('dipep.Rmd')
render('dipep.Rmd')
cd('../misc/)
cd('../misc/')
system('ls -l')
render('meeting_20170328.Rmd')
cd('../rmarkdown/')
render('dipep.Rmd')
ls()
names(logistic)
render('dipep.Rmd')
q()
render('dipep.Rmd')
ddimer.pooled.all
table(dipep$d.dimer.high)
table(dipep$d.dimer, dipep$d.dimer.high)
dplyr::filter(dipep, !is.na(d.dimer) & is.na(d.dimer)) %>% dim()
dplyr::filter(dipep, !is.na(d.dimer) & is.na(d.dimer.high)) %>% dim()
dplyr::filter(dipep, !is.na(d.dimer) & is.na(d.dimer.high)) %>% nrow()
dplyr::filter(dipep, !is.na(d.dimer) & is.na(d.dimer.high)) %>% dplyr::select(screening, group, d.dimer, d.dimer.high)
cd('../lib/data-raw/')
source('import.R')
dplyr::filter(dipep, !is.na(d.dimer) & is.na(d.dimer.high)) %>% dplyr::select(screening, group, d.dimer, d.dimer.low, d.dimer.high)
dplyr::filter(dipep, !is.na(d.dimer) & is.na(d.dimer.high)) %>% dplyr::select(screening, group, d.dimer, d.dimer.low, d.dimer.high, d.dimer.cat)
table(dipep$d.dimer.cat)
table(dipep$first.st, dipep$d.dimer.cat)
names(biomarker.all)
names(dipep)
table(dipep$d.dimer, dipep$exclude.anti.coag, useNA = 'ifany')
pwd()
cd('../')
build()
install()
cd('../knitr/')
render('dipep.Rmd')
render('dipep.Rmd')
traceback()
cd('../lib/')
build()
install()
biomarker.all$predicted
build()
install()
biomarker.all$predicted$M %>% table()
biomarker.all$predicted$M %>% typeof()
biomarker.all$predicted %>% head()
traceback()
table(biomarker.all$predicted$D)
levels(biomarker.all$predicted$D)
levels(biomarker.all$predicted$term, biomarker.all$predicted$D)
table(biomarker.all$predicted$name, biomarker.all$predicted$D)
pwd()
build()
install()
cd('../knitr/')
render('dipep.Rmd')
render('dipep.Rmd')
traceback()
render('dipep.Rmd')
pwd()
cd('../lib/')
build()
install()
build()
install()
cd('../knitr')
render('dipep.Rmd')
render('dipep.Rmd')
render('dipep.Rmd')
cd('../lib')
build()
install()
biomarker.all$d.dimer.cat$tidied
biomarker.all$d.dimer.cat$tidied
pwd()
build()
install()
cd('../knitr/')
render('dipep.Rmd')
render('dipep.Rmd')
table(summary.biomarkers.all$first.st$Measurement)
?kable
)
pwd()
render('dipep.Rmd')
render('dipep.Rmd')
biomarker.excl.anti.coag$d.dimer.cat
biomarker.excl.anti.coag$d.dimer.cat$fitted
biomarker.excl.anti.coag$d.dimer.cat$fitted %>% summary()
biomarker.all$d.dimer.cat$fitted %>% summary()
biomarker.excl.anti.coag$d.dimer$fitted %>% summary()
biomarker.excl.anti.coag$d.dimer.cat$fitted %>% summary()
biomarker.all$d.dimer.cat$fitted %>% summary()
biomarker.excl.anti.coag$d.dimer.cat$fitted %>% summary()
t <- dplyr::filter(dipep, exclude.anticoag == 'No')
names(dipep)
t <- dplyr::filter(dipep, exclude.anti.coag == 'No')
dim(t)
table(t$first.st, t$d.dimer.cat)
table(t$first.st, t$d.dimer.cat) %>% kable()
table(dipep$first.st, dipep$d.dimer.cat) %>% kable(caption = "PE Status v D-Dimer (Hospital) dichotomisation")

dipep[exclude.anti.coag == "No"]$first.st
dipep[dipep$exclude.anti.coag == "No"]$first.st
dipep[, dipep$exclude.anti.coag == "No"]$first.st
dplyr::filter(dipep, exclude.anti.coag == 'No') %>% table(.$first.st, .$d.dimer.cat)
render('dipep.Rmd')
render('dipep.Rmd')
to.plot <- dipep_plot(df                    = dipep,
                      exclude               = NULL,
                      exclude.non.recruited = FALSE,
                      exclude.dvt           = FALSE,
                      exclude.anti.coag     = FALSE,
                      exclude.missing       = FALSE,
                      title.to.plot         = 'Age (Years)',
                      title.class           = 'Recruitment',
                      group, age)
to.plot$scatter
dplyr::filter(summary.stats$group, Measurement == 'Age') %>%
    dplyr::select(-Measurement) %>%
    kable(caption = 'Summary of Age by Recruitment Group')

names(biomarker.all)
table(biomarker.all$tidied$estimate)
table(biomarker.all$tidied$statistic)
table(biomarker.all$tidied$term)
render('dipep.Rmd')
render('dipep.Rmd')
traceback()
cd('../lib/')
build()
install()
cd('../knitr/')
render('dipep.Rmd')
names(dipep)
pwd()
render('dipep.Rmd')
render('dipep.Rmd')
biomarker.all$ddimer.elisa$fitted
biomarker.all$ddimer.elisa$fitted %>% summary()
dplyr::select(dipep, screening, ddimer.elisa, plasmin.antiplasmin) %>% head()
dplyr::select(dipep, screening, ddimer.elisa, ddimer.innovance, plasmin.antiplasmin) %>% head()
cd('../misc/')
system('ls -l')
render('meeting_20170328.Rmd')
table(dipep$trimester)
labels(dipep$trimester)
levels(dipep$trimester)
ci.se(logistic$predicted$D, logistic$predicted$M)
library(pROC)
 sensitivity(I(price > 5000) ~ I(carat > 1.5), data = diamonds)
?sensitivity
lvs <- c("normal", "abnormal")
     truth <- factor(rep(lvs, times = c(86, 258)),
                     levels = rev(lvs))
     pred <- factor(
                    c(
                      rep(lvs, times = c(54, 32)),
                      rep(lvs, times = c(27, 231))),               
                    levels = rev(lvs))
     
     xtab <- table(pred, truth)
truth
pred
table(logistic$predicted$term)
table(logistic$predicted$name)
t
table(logistic$predicted$term, logistic$predicted$M)
table(logistic$predicted$name)
t
x <- ftable(I(price > 5000) ~ I(carat > 1.5), data = diamonds)
x
?ftable
?I
names(t)
logistic$surgery$roc
logistic$surgery$roc + geom_rocci()
logistic$surgery$roc + geom_rocci(sig.level = 0.05)
logistic$saturated$roc + geom_rocci(sig.level = 0.05)
library(pROC)
head(t)
typeof(t$D)
tyepof(t$M)
typeof(t$M)
?ci.se
sessionInfo()
names(test)
test
test
test
names(test)
rownames(test)
table(dipep$heart.rate.cat)
table(dipep$heart.rate.cat, useNA())
table(dipep$heart.rate.cat, useNA == 'ifany')
table(dipep$heart.rate.cat, useNA = 'ifany')
table(dipep$age.cat)
table(dipep$age, dipep$age.cat)
table(dipep$age, dipep$age.cat, useNA = 'ifany')
table(dipep$o2.saturation, dipep$o2.saturation.cat)
table(dipep$o2.saturation, dipep$o2.saturation.cat, useNA = 'ifany')
names(dipep)
pwd()
system('rm check_scores.txt')
pwd()
cd('../lib/data-raw')
source('import.R')
source('import.R')
names(dipep)
source('import.R')
names(dipep)
table(dipep$cesarean)
head(master$delivery)
dim(master$delivery)
table(master$delivery$c.section)
table(dipep$cesarean)
table(master$delivery$c.section.indication)
names(master$delivery)
table(master$delivery$undelivered)
table(master$delivery$urgency)
table(master$delivery$c.section.urgency)
pwd()
source('import.R')
table(dipep$c.section)
table(dipep$c.section, useNA = 'ifany')
table(dipep$c.section, dipep$cesarean, useNA = 'ifany')
?case_when
names(dipep)
source('import.R')
source('import.R')
source('import.R')
table(dipep$c.section, dipep$cesarean, useNA = 'ifany')
dplyr::select(master$outcome.infant, screening, group, stillborn)
names(master$delivery)
names(master)
names(master$pregnancy.continued)
source('import.R')
table(dipep$this.pregnancy.problems.stillbirth)
dipep$this.pregnancy.problems.stillbirth
dplyr::filter(dipep, !is.na(this.pregnancy.problems.stillbirth)) %>% dplyr::select(screening, this.pregnancy.problems.stillbirth)
dplyr::filter(dipep, screening == 'PE_109') %>% dplyr::select(screening, this.pregnancy.problems.stillbirth)
table(master$outcome.infant$stillborn)
source('import.R')
table(dipep$this.pregnancy.problems.hyperemesis)
table(master$pregnancy.problems$this.preg.problem.other)
dplyr::filter(master$pregnancy.problems, grepl('hyperemesis', this.preg.problem.other, ignore.case = TRUE) 
)
table(dipep$this.pregnancy.problems.hyperemesis)
dplyr::filter(dipep, this.pregnancy.problems.hyperemesis == 1) %>% dplyr::select(screening, this.pregnancy.problems.hyperemesis)
dplyr::filter(master$pregnancy.problems, grepl('hyperemesis', this.preg.problem.other, ignore.case = TRUE) | this.preg.problem.specify == 'Hyperemesis requiring admission'))
dplyr::filter(master$pregnancy.problems, grepl('hyperemesis', this.preg.problem.other, ignore.case = TRUE) | this.preg.problem.specify == 'Hyperemesis requiring admission')
dplyr::filter(master$pregnancy.problems, grepl('hyperemesis', this.preg.problem.other, ignore.case = TRUE) | this.preg.problem.specify == 'Hyperemesis requiring admission') %>% dplyr::select(screening, this.preg.problem.specify, this.preg.problem.other)
source('import.R')
table(dipep$hyperemesis)
dplyr::filter(dipep, hyperemesis == 1) %>% dplyr::select(screening, hyperemesis)
check
table(t1$screening)
table(t2$screening)
dim(dipep)
dim(t10)
unique(t10) %>% dim()
dplyr::select(t10, screening) %>% dim()
dplyr::select(t10, screening) %>% unique() %>% dim()
dplyr::select(master$outcome.infant, screening, group, stillborn) %>% dim()
dplyr::select(master$outcome.infant, screening, group, stillborn) %>% unique() %>% dim()
dplyr::filter(master$outcome.infant, screening == 'PE_079')
dplyr::filter(master$delivery == 'PE_079')
dplyr::filter(master$delivery, screening == 'PE_079')
dplyr::select(master$outcome.infant, screening, group, stillborn) %>% dim()
dplyr::select(master$outcome.infant, screening, group, stillborn) %>% unique() %>% dim()
dplyr::select(master$delivery, screening, group, c.section, c.section.urgency, cs.indication.other) %>% dim()
dplyr::select(master$delivery, screening, group, c.section, c.section.urgency, cs.indication.other) %>% unique() %>% dim()
dplyr::select(master$service.receipt, screening, group, admitted.hospital) %>% dim()
dplyr::select(master$service.receipt, screening, group, admitted.hospital) %>% unique() %>% dim()
source('import.R')
table(t1$screening)
table(t2$screening)
dim(dipep)
table(dipep$hyperemesis)
source('import.R')
table(dipep$hyperemesis)
dplyr::filter(dipep, cesarean == 'Cesarean') %>% dplyr::select(screening, cesarean, c.section)
dplyr::filter(dipep, cesarean == 'Cesarean') %>% dplyr::select(screening, cesarean, c.section, c.section.urgency, cs.indication.other)
table(dipep$delphi.obstetric.complication)
table(dipep$stillborn)
source('import.R')
table(dipep$stillborn, useNA = 'ifany')
source('import.R')
source('import.R')
table(dipep$stillborn, useNA = 'ifany')
table(dipep$delphi.obstetric.complication)
table(dipep$delphi.obstetric.complication, dipep$multiple.preg, useNA = 'ifany')
source('import.R')
table(dipep$delphi.obstetric.complication, dipep$multiple.preg, useNA = 'ifany')
table(master$pregnancy.problems$this.preg.problem.other)
summary.biomarkers.all$first.st
summary.biomarkers.all$first.st %>% filter(Measurement == 'D-Dimer (Hospital)')
table(dipep$d.dimer, dipep$group)
names(dipep)
pwd()
source('import.R')
source('import.R')
source('import.R')
names(master$biomarker_tidy)
source('import.R')
names(dipep)
table(dipep$bnp.cat)
table(dipep$bnp.cat, useNA = 'ifany')
source('import.R')
table(dipep$bnp.cat, useNA = 'ifany')
table(dipep$bnp.cat, dipep$first.st, useNA = 'ifany')
cd('../')
pwd()
build()
install()
render('dipep.Rmd')
cd('../knitr')
render('dipep.Rmd')
render('dipep.Rmd')
render('dipep.Rmd')
render('dipep.Rmd')
biomarkers.all$prothombin.time.cat$fitted %>% summary()
biomarker.all$prothombin.time.cat$fitted %>% summary()
biomarker.all$prothombin.time.cat <- dipep_glm(df = dipep,
                                           exclude.dvt           = FALSE,
                                           exclude.non.recruited = TRUE,
                                           exclude.anti.coag     = FALSE,
                                           exclude.missing       = FALSE,
                                           classification = 'vte',
                                           predictor      = 'prothombin.time.cat',
                                           model          = 'Prothombin Time : Dichotomised')

names(biomarker.all$prothombin.time.cat)
names(biomarker.all$prothombin.time.cat$table)
biomarker.all$prothombin.time.cat$table
biomarker.all$prothombin.time.cat$roc
biomarker.all$prothombin.time.cat$ci
biomarker.all$prothombin.time.cat$auc
biomarker.all$prothombin.time.cat$roc
names(dipep)
pwd()
pwd()
cd('../lib/')
build()
install()
pwd()
build()
install()
cd('../knitr/')
render('dipep.Rmd')
table(dipep$thrombin.generation.lag.time.cat)
table(dipep$thrombin.generation.lag.time, dipep$thrombin.generation.lag.time.cat)
render('dipep.Rmd')
table(dipep$clauss.fibrinogen.cat)
table(dipep$clauss.fibrinogen, dipep$clauss.fibrinogen.cat)
cd('../lib/data-raw/')
source('import.R')
table(dipep$clauss.fibrinogen, dipep$clauss.fibrinogen.cat)
source('import.R')
source('import.R')
table(dipep$clauss.fibrinogen, dipep$clauss.fibrinogen.cat)
cd('../')
build()
install()
cd('../knitr')
render('dipep.Rmd')
names(biomarker.excl.anti.coag.roc.other$summary.stats)
names(biomarker.excl.anti.coag$roc.other$summary.stats)
biomarker.excl.anti.coag$roc.other$summary.stats
table(biomarker.excl.anti.coag$predicted$term)
table(biomarker.excl.anti.coag$predicted$name)
traceback()
traceback()
traceback()
table(dipep$first.st, dipep$aptt.cat)
table(dipep$first.st, dipep$troponin.cat)
dplyr::filter(biomarker.excl.anti.coag$predicted, name %in% c('aptt.cat'))
t
t
t
)
t
t
spread(t, value = n)
t
table(t$biomarker, t$classification)
t
t %>% as.data.frame()
t %>% as.data.frame()
t %>% as.data.frame()
t %>% as.data.frame()

. + > 
t
t
t
t$biomarker
)
t
biomarker.excl.anti.coag$bnp.cat$auc
biomarker.excl.anti.coag$bnp.cat$auc$AUC
auc
auc
head(t)
render('dipep.Rmd')
cd('../lib/')
group_by(dipep, first.st) %>% summarise(mean = mean(thrombin.generation.time.to.peak, na.rm = TRUE))
table(dipep$first.st, dipep$thrombin.generation.time.to.peak.cat)
build()
install()
)
to.sum
cd('../knitr')
render('dipep.Rmd')
14 + 94 + 4 + 38
90 + 48
table(summary.biomarkers.all$vte$Measurement)
cd('../lib/')
build()
install()
cd('../knitr/')
render('dipep.Rmd')
table(summary.biomarkers.all$vte$Measurement)
cd('../lib/')
build()
install()
cd('../knitr')
render('dipep.Rmd')
render('dipep.Rmd')
render('dipep.Rmd')
biomarker.all$tidied
build()
cd('../lib/')
build()
install()
cd('../knitr')
render('dipep.Rmd')
to.sum$estimate
to.sum
pwd()
render('dipep.Rmd')
simplified
names(simplified)
names(simplified$ppv)
simplified$ppv
existing
existing
names(dipep)
names(dipep)
names(dipep)
table(existing$predicted$name)
table(existing$predicted$term)
existing$delphi.respirator$fitted
existing$simplified.age$fitted
table(dipep$simplified.age)
existing$prev.dvt.pe$fitted
existing$simplified.prev.dvt.pe$fitted
existing$simplified..prev.dvt.pe
existing$simplified..prev.dvt.pe$fitted
existing$glance
existing$tidied
dplyr::filter(existing$tidied, term != '(Intercept)') %>% dplyr::select(term)
table(dipep$simplified.age)
table(dipep$age, dipep$simplified.age)
table(dipep$heart.rate, dipep$simplified.heart.rate)
table(dipep$heart.rate, dipep$simplified.heart.rate, useNA = 'ifany')
table(dipep$age, dipep$wells.age)
name(dipep)
names(dipep)
table(dipep$age, dipep$perc.age)
table(dipep$heart.rate, dipep$wells.heart.rate, useNA = 'ifany')
table(dipep$heart.rate, dipep$perc.heart.rate, useNA = 'ifany')
table(dipep$bmi, dipep$delphi.bmi)
existing$wells.dvt$fitted
existing$delphi.dvt$fitted
existing$delphi.o2.saturation$fitted
existing$perc.o2.saturation$fitted
existing$perc.o2$fitted
table(dipep$bmi.cat, dipep$delphi.bmi)
table(dipep$delphi.medical.history)
table(existing$tidied)
table(existing$tidied$term)
?gsub
table(dipep$wells.heart.rate, dipep$perc.heart.rate)
table(dipep$wells.heart.rate, dipep$perc.heart.rate, useNA = 'ifany')
table(dipep$wells.dvt.pe, dipep$perc.dvt.pe, useNA = 'ifany')
table(dipep$wells.dvt.pe, dipep$simplified.dvt.pe, useNA = 'ifany')
names(dipep)
table(dipep$wells.dvt.pe, dipep$perc.prev.dvt.pe, useNA = 'ifany')
table(dipep$wells.neoplasm, dipep$simplified.neoplasm, useNA = 'ifany')
dplyr::filter(existing$tided, grepl('neoplasm', term))
dplyr::filter(existing$tided)
dplyr::filter(existing$tidied, grepl('neoplasm', term))
dplyr::filter(existing$wells.neoplasm$fitted)
existing$wells.neoplasm$fitted
existing$simplified.neoplasm$fitted
dplyr::filter(dipep, simplified.neoplasm, wells.neoplasm)
dplyr::select(dipep, simplified.neoplasm, wells.neoplasm)
names(dipep)
dim(to.sum)
dim(to.sum)
dim(to.sum)
pwd()
cd('../lib')
build()
install()
q()
render('dipep.Rmd')
render('dipep.Rmd')
dplyr::filter(dipep, group == 'Non recruited' & is.na(d.dimer)) 
dplyr::filter(dipep, group == 'Non recruited' & is.na(d.dimer))  %>% dplyr::select(screening, group, d.dimer)
dplyr::filter(dipep, group == 'Non recruited' & !is.na(d.dimer))  %>% dplyr::select(screening, group, d.dimer)
dplyr::filter(dipep, !is.na(d.dimer))  %>% dplyr::select(group) %>% table()
dplyr::filter(dipep, !is.na(ddimer.elisa))  %>% dplyr::select(group) %>% table()
dplyr::filter(dipep, !is.na(ddimer.innovance))  %>% dplyr::select(group) %>% table()
dplyr::filter(dipep, !is.na(ddimer.innovance))  %>% dplyr::select(group, first.st) 
t <- dplyr::filter(dipep, !is.na(ddimer.innovance))  %>% dplyr::select(group, first.st) 
table(tfirst.st)
table(t$first.st)
t <- dplyr::filter(dipep, !is.na(ddimer.elisa))  %>% dplyr::select(group, first.st) 
table(t$first.st)
t <- dplyr::filter(dipep, !is.na(ddimer.elisa))  %>% dplyr::select(group, first.st, vte) 
table(t$vte)
t <- dplyr::filter(dipep, !is.na(d.dimer))  %>% dplyr::select(group, first.st, vte) 
table(t$group, t$first.st, useNA = 'ifany')
table(dipep$gestation)
table(dipep$trimester)
table(dipep$trimester, dipep$group, useNA = 'ifany')
cd('../lib/')
cd('data-raw/')
source('import.R')
source('import.R')
           d.dimer.gestation.cat = case_when(.$trimester == 0 & (.$d.dimer < .$d.dimer.low | .$d.dimer > .$d.dimer.high) ~ 'Abnormal',
                                             .$trimester == 1 & (.$d.dimer < (1.5 * .$d.dimer.low) | .$d.dimer > (1.5 * .$d.dimer.high)) ~ 'Abnormal',
                                             .$trimester == 2 & (.$d.dimer < (2 * .$d.dimer.low) | .$d.dimer > (2 * .$d.dimer.high)) ~ 'Abnormal',
                                             .$trimester == 3   & (.$d.dimer < (2 * .$d.dimer.low) | .$d.dimer > (2 * .$d.dimer.high)) ~ 'Abnormal')
table(trimester)
table(dipep$trimester)
q()
table(dipep$vte, dipep$first.st, useNA = 'ifany')
table(dipep$vte, dipep$second.st, useNA = 'ifany')
table(dipep$vte, dipep$third.st, useNA = 'ifany')
table(dipep$vte, dipep$fourth.st, useNA = 'ifany')
table(dipep$first.st)
table(dipep$second.st)
existing.auc.con
render('dipep.Rmd')
existing.auc.con
existing$predicted %>% names()
existing$predicted %>% head()
table(existing$predicted$M, existing$predicted$name)
table(existing$predicted$name)
dipep$delphi.primary %>% table()
dipep$delphi.primary.pe %>% table()
dipep$wells.strict.pe %>% table()
dipep$perc.pe %>% table()
existing$wells.permissive$predicted
existing$wells.permissive$fitted$data
existing$wells.permissive$fitted$data %>% names()
existing$wells.permissive$fitted
existing$simplified$fitted
existing$simplified$fitted
existing$perc$fitted
table(dipep$perc.pe)
existing$wells.permissive$fitted
existing$wells.strict$fitted
existing$delphi.primary$fitted
table(dipep$delphi.primary.pe)
table(dipep$delphi.sensitivity.pe)
existing$delphi.primary$predicted
existing$delphi.sensitivity$predicted
existing$wells$predicted
existing$wells.permissive$predicted
existing$wells.strict$predicted
existing$perc$predicted
cd('../lib/')
build()
install()
existing$delphi.primary$fitted
existing$delphi.primary$predicted
existing$delphi.primary$fitted$data
pwd()
build()
install()
existing$simplified$fitted$data %>% names()
head(logistic$predicted)
names(existing$wells.sensitivity$fitted$data)
head(existing$delphi.specificity$data)
head(existing$delphi.specificity$fitted$data)
typeof(existing$delphi.specificity$fitted$data$)
typeof(existing$delphi.specificity$fitted$data$existing)
names(existing$simplified$fitted$data)
names(existing$perc$fitted$data)
names(existing$wells.permissive$fitted$data)
names(existing$wells.strict$fitted$data)
names(existing$delphi.primary$fitted$data)
names(existing$delphi.sensitivity$fitted$data)
names(existing$delphi.specificity$fitted$data)
names(existing$delphi.sensitivity$fitted$data)
table(dipep$simplified.pe)
table(existing$predicted.existing$existing)
existing$wells.permissive$fitted$data %>% head()
head(existing$predicted.existing)
head(logistic$predicted)
table(existing$predicted.existing$name)
existing$simplified$fitted$data %>% head()
head(logistic$predicted)
existing$predicted.existing %>% head()
existing$predicted.existing %>% head()
existing$predicted.existing %>% head()
table(existing$predicted.existing$predictor, useNA = 'ifany')
table(existing$predicted.existing$name, useNA = 'ifany')
table(existing$predicted.existing$term, useNA = 'ifany')
unique(existing$predicted.existing$name)
dev.off()
dev.off()
names(t)
t$summary.stats
table(existing$predicted$name)
to.plot.con
table(to.plot.con$name)
pwd()
cd('../knitr')
render('dipep.Rmd')
q()
load('data/dipep_results.RData')
summary.stats
summary.stats.all
summary.stats$all
cd('../lib/')
build()
install()
build()
install()
summary.stats$aptt$summary.stats
summary.stats$all
pwd()
cd('../rmarkdown')
source('run_all.R')
q()
source('run_all.R')
32 + 23 + 209 + 2
cd('../lib/')
build()
install()
31 / 33 
table(summary.stats$aptt$df$D, summary.stats$aptt$df$m)
32 / 33
table(summary.stats$aptt$df$M, summary.stats$aptt$df$m)
2 + 5 + 2 + 4 + 4 + 2 + 2 + 4
table(summary.stats$aptt$df$M, summary.stats$aptt$df$m)[1,]
table(summary.stats$aptt$df$M, summary.stats$aptt$df$m)[,1]
summary.stats$aptt$counts
31 / 33
build()
install()
summary.stats$aptt$rocr.performance$cut
summary.stats$aptt$rocr.performance$cut %>% formatC(digits = 20)
29 / 31
30 / 31
summary.stats$thrombin.generation.time.to.peak$counts
26 + 193 + 2 + 28
build()
install()
30 + 26 + 193
32 + 23 + 209 + 1
32 / 33
1 / 24 
23 / (23 + 209)
22 / (22 + 209)
24 / (24 + 208)
23 / (23 + 209)
22 / (22 + 210)
21 / (21 + 211)
20 / (20 + 212)
table(summary.stats$aptt$df$M, summary.stats$aptt$df$m)
summary.stats$aptt$df$cut
summary.stats$aptt$rocr.performance$cut
summary.stats$aptt$rocr.performance$cut %>% formatC(digits = 15)
summary.stats$aptt$rocr.performance.df
build()
install()
summary.stats$aptt$t
summary.stats$aptt$rocr.performance.df
summary.stats$aptt$t
pwd()
build()
install()
pwd()
build()
install()
cd('../knitr/')
render('dipep.Rmd')
cd('../lib/')
build()
install()
cd('../knitr')
render('dipep.Rmd')
summary.stats$aptt$rocr.performance$cut
summary.stats$aptt$rocr.performance.df
summary.stats$aptt$rocr.performance.threshold
summary.stats$aptt$t
build()
cd('../lib/')
build()
install()
cd('../knitr/')
render('dipep.Rmd')
cd('../lib/')
build()
install()
cd('../knitr/')
render('dipep.Rmd')
33 / 34
cd('../lib')
build()
install()
cd('../knitr/')
source('run_all.R')
q()
library(blogdown)
sessionInfo()
blogdown::install_hugo()
blogdown::new_site()
?blogdown::new_site()
?new_site
blogdown::new_site(dir = 'blogdown')
pwd()
cd('data-raw/')
master$lookups
master$lookups %>% dim()
str(master$abridged_patient_assessment)
traceback()
names(master$lookups)
table(master$lookups$form)
traceback()
cd('~/Dropbox/R/ctru/')
build()
install()
cd('~/work/age-gap/lib/data-raw/')
read_prospect
library(ctru)
read_prospect
q()
build()
install()
cd('../rmarkdown/misc/')
system('ls')
render('2017-08-21_post_meeting.Rmd')
15440 - 5900
15440 - 5900 + 104465.57
126303 - 114005
names(age_gap)
names(age_gap) %>% as.data.frame()
names(age_gap) %>% as.data.frame() %>% names()
names(age_gap) %>% as.data.frame() %>% dplyr::filter(.$., grep('_pet'))
names(age_gap) %>% as.data.frame() %>% dplyr::filter(grep('_pet'))
names(age_gap) %>% as.data.frame() %>% dplyr::filter(x = grep('_pet'))
names(age_gap) %>% as.data.frame() %>% dplyr::filter(x == grep('_pet'))
names(age_gap) %>% as.data.frame() %>% dplyr::filter(. == grepl('_pet'))
names(age_gap) %>% as.tibble() %>% dplyr::filter(. == grepl('_pet'))
age_gap[grepl('_pet'),]
age_gap[grepl('_pet', names(age_gap)),]
age_gap[grepl('_pet', names(age_gap)),] %>% names()
age_gap[,grepl('_pet', names(age_gap))] %>% names()
age_gap[,grepl('surgery', names(age_gap))] %>% names()
age_gap %$% table(event_name, surgery)
age_gap %$% table(event_name, surgery_ever)
names(master$chemotherapy)
table(master$chemotherapy$chemo_received)
table(master$chemotherapy$event_date)
age_gap[,grepl('surgery', names(age_gap))] %>% names()
age_gap[,grepl('surgery_t', names(age_gap))] %>% names()
head(master$therapy_ever)
head(master$therapy_assessment)
dplyr::filter(master$therapy_assessment, event_date != date) %>% head()
dplyr::filter(master$therapy_assessment, event_date != date) %>% dim()
dim(master$therapy_assessment)
table(master$therapy_assessment$event_name)
dim(master$endocrine_therapy)
names(master$endocrine_therapy)
names(master$chemotherapy)
dplyr::filter(master$chemotherapy, event_date != assesement_dt) %>% dim()
dplyr::filter(master$chemotherapy, event_date != assessement_dt) %>% dim()
dplyr::filter(master$chemotherapy, event_date != assessment_dt) %>% dim()
dim(master$chemotherapy)
names(master$therapy_assessment)
names(master$chemotherapy_chemotherapy)
head(master$chemotherapy_chemotherapy)
head(master$surgery)
master$therapy_assessment %>% nrow()
dplyr::filter(master$therapy_assessment, event_date != date) %>% nrow()

master$therapy_assessment %>% nrow()
q()
